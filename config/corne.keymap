/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        qwerty {
            bindings = <&to 1>;
            key-positions = <36 38>;
            layers = <0 2>;
        };

        Game {
            bindings = <&to 2>;
            key-positions = <39 41>;
            layers = <1 0>;
        };

        dvorakP {
            bindings = <&to 0>;
            key-positions = <40 41>;
            layers = <1 2>;
        };

        altEsc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            layers = <1 2>;
        };

        altDel {
            bindings = <&kp DELETE>;
            key-positions = <9 10>;
            layers = <1 0 2>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <13 14>;
            layers = <0 2 1>;
        };

        altEntr {
            bindings = <&kp ENTER>;
            key-positions = <22 21>;
            layers = <1 2>;
        };
    };

    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorakP {
            display-name = "Base";
            bindings = <
&kp CAPS                  &kp SEMICOLON    &kp COMMA        &kp PERIOD           &kp P              &kp Y        &kp F      &kp G               &kp C                 &kp R             &kp L             &kp SLASH
&HML LEFT_CONTROL ESCAPE  &HML LEFT_WIN A  &HML LEFT_ALT O  &HML LEFT_CONTROL E  &HML LEFT_SHIFT U  &kp I        &kp D      &HMR RIGHT_SHIFT H  &HMR RIGHT_CONTROL T  &HMR RIGHT_ALT N  &HMR RIGHT_WIN S  &kp BACKSPACE
&kp LEFT_SHIFT            &kp SQT          &kp Q            &kp J                &kp K              &kp X        &kp B      &kp M               &kp W                 &kp V             &kp Z             &kp RIGHT_ALT
                                                            &lt 5 LEFT_WIN       &lt 3 TAB          &kp ENTER    &kp SPACE  &lt 4 LEFT_ALT      &kp MINUS
            >;
        };

        qwerty {
            display-name = "Q";
            bindings = <
&kp TAB           &kp Q            &kp W            &kp E                &kp R              &kp T        &kp Y      &kp U               &kp I                 &kp O             &kp P                &kp LEFT_BRACKET
&kp LEFT_SHIFT    &HML LEFT_WIN A  &HML LEFT_ALT S  &HML LEFT_CONTROL D  &HML LEFT_SHIFT F  &kp G        &kp H      &HMR RIGHT_SHIFT J  &HMR RIGHT_CONTROL K  &HMR RIGHT_ALT L  &HMR RIGHT_WIN SEMI  &kp BACKSPACE
&kp LEFT_CONTROL  &kp Z            &kp X            &kp C                &kp V              &kp B        &kp N      &kp M               &kp COMMA             &kp DOT           &kp FSLH             &kp APOS
                                                    &lt 5 LEFT_WIN       &mo 3              &kp ENTER    &kp SPACE  &mo 4               &kp RALT
            >;
        };

        qwertyG {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "G";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E           &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P          &kp LEFT_BRACKET
&kp LEFT_SHIFT    &kp A  &kp S  &kp D           &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON  &kp BACKSPACE
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C           &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH       &kp APOS
                                &lt 5 LEFT_WIN  &mo 3  &kp ENTER    &kp SPACE  &mo 4  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB         &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6                    &kp N7    &kp N8         &kp N9       &kp N0     &kp BSPC
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &bt BT_CLR      &kp LS(LC(LG(LEFT_ALT)))  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp DELETE
&kp LSHFT       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans                    &trans    &kp PAGE_DOWN  &kp PAGE_UP  &trans     &trans
                                            &kp LGUI      &trans        &kp SPACE       &kp RET                   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Fn {
            display-name = "fnM";
            bindings = <
&kp TAB    &kp F1  &kp F2    &kp F3    &kp F4    &kp F5       &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &kp F11
&kp LCTRL  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans   &kp F12
&kp LSHFT  &trans  &trans    &trans    &trans    &trans       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans   &trans
                             &kp LGUI  &trans    &kp SPACE    &kp RET         &trans          &kp RALT
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
